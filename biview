#!/usr/bin/env python

import argparse
import re
import sys


def truncate_at(text, max_width):
    chars = []
    width = 0
    for ch in text:
        if re.match(r'[ぁ-んァ-ンー\u4e00-\u9FFF]', ch):
            width += 2
        else:
            width += 1
        chars.append(ch)
        if width >= max_width:
            break
    return ''.join(chars), width


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--gpt-detokenize', action='store_true')
    parser.add_argument('--width', type=int, default=100)
    args = parser.parse_args()

    for line in sys.stdin:
        fields = line[:-1].split('\t')
        if len(fields) != 2:
            print(f'warning: number of fields is not 2: {fields}', file=sys.stderr)
        src = fields[0]
        tgt = fields[1]

        if args.gpt_detokenize:
            src = src.replace(' ', '').replace('Ġ', ' ')
            tgt = tgt.replace(' ', '').replace('Ġ', ' ')
        src, src_width = truncate_at(src, args.width)
        tgt, tgt_width = truncate_at(tgt, args.width)

        if len(src) < args.width:
            src += ' ' * (args.width - src_width)
        
        if len(tgt) < args.width:
            tgt += ' ' * (args.width - tgt_width)

        print(f'{src}\t{tgt}')


if __name__ == "__main__":
    main()
